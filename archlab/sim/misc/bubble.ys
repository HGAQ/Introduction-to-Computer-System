#刘松瑞 2100011819
    .pos 0
    irmovq stack,%rsp
    call main
    halt

# Sample linked list
    .align 8
Array:
    .quad 0xbca
    .quad 0xcba
    .quad 0xacb
    .quad 0xcab
    .quad 0xabc
    .quad 0xbac
main:
    irmovq Array,%rdi 
    irmovq $6,%rsi
    call bubble
    ret

#void bubble_sort(long *data, long count)
#{
#     long *i, *last;
#     for(last = data + count - 1; last > data; last--) {
#         for(i = data; i < last; i++) {
#             if(*(i + 1) < *i) {
#                 long t = *(i + 1);
#                 *(i + 1) = *i;
#                 *i = t;
#             }
#         }
#    }
#}

# data in %rdi count in %rsi
bubble:
    #init_1
    rrmovq %rdi,%rdx
    addq %rsi,%rdx
    addq %rsi,%rdx
    addq %rsi,%rdx
    addq %rsi,%rdx
    addq %rsi,%rdx
    addq %rsi,%rdx
    addq %rsi,%rdx
    addq %rsi,%rdx
    irmovq $8,%r12
    subq %r12,%rdx        #%rdx is last
    rrmovq %rdx,%rcx      #%rcx is &last
    jmp test_1
loop_1:
    #init_2
    rrmovq %rdi,%r8     #%r8 is i
    rrmovq %r8,%r9      #%r9 is &i
    jmp test_2
loop_2:
    mrmovq (%r8),%r10  
    mrmovq 8(%r8),%r11
    subq %r10,%r11
    jge update_2
    mrmovq 8(%r8),%r11
    rmmovq %r10,8(%r8)
    rmmovq %r11,(%r8)
update_2:
    irmovq $8,%r12
    addq %r12,%r8       # %r8 ++
    rrmovq %r8,%r9      # &i
test_2:
    subq %rdx,%r9       # &i - last < 0
    jl loop_2           # 
update_1:
    irmovq $8,%r12
    subq %r12,%rdx        #last--
    rrmovq %rdx,%rcx      #&last
test_1:
    subq %rdi,%rcx        #&last-data > 0
    jg loop_1             #
    ret






    .pos 0x200
stack:
